<?php
/**
 * FilesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  NodeumSDK\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Nodeum API
 *
 * The Nodeum API makes it easy to tap into the digital data mesh that runs across your organisation. Make requests to our API endpoints and we’ll give you everything you need to interconnect your business workflows with your storage.  All production API requests are made to:  http://nodeumhostname/api/  The current production version of the API is v1.   **REST** The Nodeum API is a RESTful API. This means that the API is designed to allow you to get, create, update, & delete objects with the HTTP verbs GET, POST, PUT, PATCH, & DELETE.  **JSON** The Nodeum API speaks exclusively in JSON. This means that you should always set the Content-Type header to application/json to ensure that your requests are properly accepted and processed by the API.  **Authentication** All API calls require user-password authentication.   **Cross-Origin Resource Sharing** The Nodeum API supports CORS for communicating from Javascript for these endpoints. You will need to specify an Origin URI when creating your application to allow for CORS to be whitelisted for your domain.   **Pagination** Some endpoints such as File Listing return a potentially lengthy array of objects. In order to keep the response sizes manageable the API will take advantage of pagination. Pagination is a mechanism for returning a subset of the results for a request and allowing for subsequent requests to “page” through the rest of the results until the end is reached. Paginated endpoints follow a standard interface that accepts two query parameters, limit and offset, and return a payload that follows a standard form. These parameters names and their behavior are borrowed from SQL LIMIT and OFFSET keywords.  **Versioning** The Nodeum API is constantly being worked on to add features, make improvements, and fix bugs. This means that you should expect changes to be introduced and documented.   However, there are some changes or additions that are considered backwards-compatible and your applications should be flexible enough to handle them. These include:  - Adding new endpoints to the API - Adding new attributes to the response of an existing endpoint - Changing the order of attributes of responses (JSON by definition is an object of unordered key/value pairs)  **Filter parameters** When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@nodeum.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace NodeumSDK\Client;

use \NodeumSDK\Client\Configuration;
use \NodeumSDK\Client\ApiException;
use \NodeumSDK\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * FilesApiTest Class Doc Comment
 *
 * @category Class
 * @package  NodeumSDK\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class FilesApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for filesChildren
     *
     * Lists files under a specific folder..
     *
     */
    public function testFilesChildren()
    {
    }

    /**
     * Test case for filesChildrenByContainer
     *
     * Lists files under a specific folder..
     *
     */
    public function testFilesChildrenByContainer()
    {
    }

    /**
     * Test case for filesChildrenByPool
     *
     * Lists files under a specific folder..
     *
     */
    public function testFilesChildrenByPool()
    {
    }

    /**
     * Test case for filesChildrenByTask
     *
     * Lists files under a specific folder..
     *
     */
    public function testFilesChildrenByTask()
    {
    }

    /**
     * Test case for filesChildrenByTaskExecution
     *
     * Lists files under a specific folder..
     *
     */
    public function testFilesChildrenByTaskExecution()
    {
    }

    /**
     * Test case for filesChildrenByTaskExecutionByTask
     *
     * Lists files under a specific folder..
     *
     */
    public function testFilesChildrenByTaskExecutionByTask()
    {
    }

    /**
     * Test case for importFilesChildrenByPool
     *
     * Lists files under a specific folder on tape of pools, specific for Data Exchange..
     *
     */
    public function testImportFilesChildrenByPool()
    {
    }

    /**
     * Test case for indexFiles
     *
     * Lists files on root..
     *
     */
    public function testIndexFiles()
    {
    }

    /**
     * Test case for indexFilesByContainer
     *
     * Lists files on root..
     *
     */
    public function testIndexFilesByContainer()
    {
    }

    /**
     * Test case for indexFilesByPool
     *
     * Lists files on root..
     *
     */
    public function testIndexFilesByPool()
    {
    }

    /**
     * Test case for indexFilesByTask
     *
     * Lists files on root..
     *
     */
    public function testIndexFilesByTask()
    {
    }

    /**
     * Test case for indexFilesByTaskExecution
     *
     * Lists files on root..
     *
     */
    public function testIndexFilesByTaskExecution()
    {
    }

    /**
     * Test case for indexFilesByTaskExecutionByTask
     *
     * Lists files on root..
     *
     */
    public function testIndexFilesByTaskExecutionByTask()
    {
    }

    /**
     * Test case for indexImportFilesByPool
     *
     * Lists files on root of tape of pools, specific for Data Exchange..
     *
     */
    public function testIndexImportFilesByPool()
    {
    }

    /**
     * Test case for indexOnTapesFilesByPool
     *
     * Lists files on root of tape of pools, specific for Active and Offline..
     *
     */
    public function testIndexOnTapesFilesByPool()
    {
    }

    /**
     * Test case for indexTapesByFileByPool
     *
     * Displays tapes containing specific file, related to the specific pool..
     *
     */
    public function testIndexTapesByFileByPool()
    {
    }

    /**
     * Test case for indexTapesByFileByTask
     *
     * Displays tapes containing specific file, related to the specific task..
     *
     */
    public function testIndexTapesByFileByTask()
    {
    }

    /**
     * Test case for indexTapesByFileByTaskExecution
     *
     * Displays tapes containing specific file, related to the specific task..
     *
     */
    public function testIndexTapesByFileByTaskExecution()
    {
    }

    /**
     * Test case for indexTapesByFileByTaskExecutionByTask
     *
     * Displays tapes containing specific file, related to the specific task..
     *
     */
    public function testIndexTapesByFileByTaskExecutionByTask()
    {
    }

    /**
     * Test case for onTapesFilesChildrenByPool
     *
     * Lists files under a specific folder on tape of pools, specific for Active and Offline..
     *
     */
    public function testOnTapesFilesChildrenByPool()
    {
    }

    /**
     * Test case for showFile
     *
     * Displays a specific file..
     *
     */
    public function testShowFile()
    {
    }

    /**
     * Test case for showFileByContainer
     *
     * Displays a specific file..
     *
     */
    public function testShowFileByContainer()
    {
    }

    /**
     * Test case for showFileByPool
     *
     * Displays a specific file..
     *
     */
    public function testShowFileByPool()
    {
    }

    /**
     * Test case for showFileByTask
     *
     * Displays a specific file..
     *
     */
    public function testShowFileByTask()
    {
    }

    /**
     * Test case for showFileByTaskExecution
     *
     * Displays a specific file..
     *
     */
    public function testShowFileByTaskExecution()
    {
    }

    /**
     * Test case for showFileByTaskExecutionByTask
     *
     * Displays a specific file..
     *
     */
    public function testShowFileByTaskExecutionByTask()
    {
    }

    /**
     * Test case for showImportFileByPool
     *
     * Displays a specific file on tape of pools, specific for Data Exchange..
     *
     */
    public function testShowImportFileByPool()
    {
    }

    /**
     * Test case for showOnTapeFileByPool
     *
     * Displays a specific file on tape of pools, specific for Active and Offline..
     *
     */
    public function testShowOnTapeFileByPool()
    {
    }
}
