<?php
/**
 * TapeStat
 *
 * PHP version 5
 *
 * @category Class
 * @package  NodeumSDK\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Nodeum API
 *
 * The Nodeum API makes it easy to tap into the digital data mesh that runs across your organisation. Make requests to our API endpoints and we’ll give you everything you need to interconnect your business workflows with your storage.  All production API requests are made to:  http://nodeumhostname/api/  The current production version of the API is v1.   **REST** The Nodeum API is a RESTful API. This means that the API is designed to allow you to get, create, update, & delete objects with the HTTP verbs GET, POST, PUT, PATCH, & DELETE.  **JSON** The Nodeum API speaks exclusively in JSON. This means that you should always set the Content-Type header to application/json to ensure that your requests are properly accepted and processed by the API.  **Authentication** All API calls require user-password authentication.   **Cross-Origin Resource Sharing** The Nodeum API supports CORS for communicating from Javascript for these endpoints. You will need to specify an Origin URI when creating your application to allow for CORS to be whitelisted for your domain.   **Pagination** Some endpoints such as File Listing return a potentially lengthy array of objects. In order to keep the response sizes manageable the API will take advantage of pagination. Pagination is a mechanism for returning a subset of the results for a request and allowing for subsequent requests to “page” through the rest of the results until the end is reached. Paginated endpoints follow a standard interface that accepts two query parameters, limit and offset, and return a payload that follows a standard form. These parameters names and their behavior are borrowed from SQL LIMIT and OFFSET keywords.  **Versioning** The Nodeum API is constantly being worked on to add features, make improvements, and fix bugs. This means that you should expect changes to be introduced and documented.   However, there are some changes or additions that are considered backwards-compatible and your applications should be flexible enough to handle them. These include:  - Adding new endpoints to the API - Adding new attributes to the response of an existing endpoint - Changing the order of attributes of responses (JSON by definition is an object of unordered key/value pairs)  **Filter parameters** When browsing a list of items, multiple filter parameters may be applied. Some operators can be added to the value as a prefix:  - `=` value is equal. Default operator, may be omitted  - `!=` value is different  - `>` greater than  - `>=` greater than or equal  - `<` lower than  - `>=` lower than or equal  - `><` included in list, items should be separated by `|`  - `!><` not included in list, items should be separated by `|`  - `~` pattern matching, may include `%` (any characters) and `_` (one character)  - `!~` pattern not matching, may include `%` (any characters) and `_` (one character)
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: info@nodeum.io
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace NodeumSDK\Client\Model;

use \ArrayAccess;
use \NodeumSDK\Client\ObjectSerializer;

/**
 * TapeStat Class Doc Comment
 *
 * @category Class
 * @package  NodeumSDK\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TapeStat implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'tape_stat';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'log_time' => 'string',
        'barcode' => 'string',
        'mounts' => 'int',
        'datasets_written' => 'int',
        'datasets_read' => 'int',
        'recovered_write_data_errors' => 'int',
        'unrecovered_write_data_errors' => 'int',
        'write_servo_errors' => 'int',
        'unrecovered_write_servo_errors' => 'int',
        'recovered_read_errors' => 'int',
        'unrecovered_read_errors' => 'int',
        'last_mount_unrecovered_write_errors' => 'int',
        'last_mount_unrecovered_read_errors' => 'int',
        'last_mount_mbytes_written' => 'int',
        'last_mount_mbytes_read' => 'int',
        'lifetime_mbytes_written' => 'int',
        'lifetime_mbytes_read' => 'int',
        'last_load_write_compression_ratio' => 'int',
        'last_load_read_compression_ratio' => 'int',
        'medium_mount_time' => 'int',
        'medium_ready_time' => 'int',
        'total_native_capacity' => 'int',
        'total_used_native_capacity' => 'int',
        'write_protect' => 'int',
        'worm' => 'int',
        'beginning_of_medium_passes' => 'int',
        'middle_of_tape_passes' => 'int',
        'read_compression_ratio' => 'int',
        'write_compression_ratio' => 'int',
        'mbytes_transferred_to_app_client' => 'int',
        'bytes_transferred_to_app_client' => 'int',
        'mbytes_read_from_medium' => 'int',
        'bytes_read_from_medium' => 'int',
        'mbytes_transferred_from_app_client' => 'int',
        'bytes_transferred_from_app_client' => 'int',
        'mbytes_written_to_medium' => 'int',
        'bytes_written_to_medium' => 'int',
        'data_compression_enabled' => 'int',
        'write_retries' => 'int',
        'write_perms' => 'int',
        'suspended_writes' => 'int',
        'fatal_suspended_writes' => 'int',
        'read_retries' => 'int',
        'read_perms' => 'int',
        'suspended_reads' => 'int',
        'fatal_suspended_reads' => 'int',
        'partition_0_remaining_capacity' => 'int',
        'partition_1_remaining_capacity' => 'int',
        'partition_0_maximum_capacity' => 'int',
        'partition_1_maximum_capacity' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'log_time' => null,
        'barcode' => null,
        'mounts' => null,
        'datasets_written' => null,
        'datasets_read' => null,
        'recovered_write_data_errors' => null,
        'unrecovered_write_data_errors' => null,
        'write_servo_errors' => null,
        'unrecovered_write_servo_errors' => null,
        'recovered_read_errors' => null,
        'unrecovered_read_errors' => null,
        'last_mount_unrecovered_write_errors' => null,
        'last_mount_unrecovered_read_errors' => null,
        'last_mount_mbytes_written' => null,
        'last_mount_mbytes_read' => null,
        'lifetime_mbytes_written' => null,
        'lifetime_mbytes_read' => null,
        'last_load_write_compression_ratio' => null,
        'last_load_read_compression_ratio' => null,
        'medium_mount_time' => null,
        'medium_ready_time' => null,
        'total_native_capacity' => null,
        'total_used_native_capacity' => null,
        'write_protect' => null,
        'worm' => null,
        'beginning_of_medium_passes' => null,
        'middle_of_tape_passes' => null,
        'read_compression_ratio' => null,
        'write_compression_ratio' => null,
        'mbytes_transferred_to_app_client' => null,
        'bytes_transferred_to_app_client' => null,
        'mbytes_read_from_medium' => null,
        'bytes_read_from_medium' => null,
        'mbytes_transferred_from_app_client' => null,
        'bytes_transferred_from_app_client' => null,
        'mbytes_written_to_medium' => null,
        'bytes_written_to_medium' => null,
        'data_compression_enabled' => null,
        'write_retries' => null,
        'write_perms' => null,
        'suspended_writes' => null,
        'fatal_suspended_writes' => null,
        'read_retries' => null,
        'read_perms' => null,
        'suspended_reads' => null,
        'fatal_suspended_reads' => null,
        'partition_0_remaining_capacity' => null,
        'partition_1_remaining_capacity' => null,
        'partition_0_maximum_capacity' => null,
        'partition_1_maximum_capacity' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'log_time' => 'log_time',
        'barcode' => 'barcode',
        'mounts' => 'mounts',
        'datasets_written' => 'datasets_written',
        'datasets_read' => 'datasets_read',
        'recovered_write_data_errors' => 'recovered_write_data_errors',
        'unrecovered_write_data_errors' => 'unrecovered_write_data_errors',
        'write_servo_errors' => 'write_servo_errors',
        'unrecovered_write_servo_errors' => 'unrecovered_write_servo_errors',
        'recovered_read_errors' => 'recovered_read_errors',
        'unrecovered_read_errors' => 'unrecovered_read_errors',
        'last_mount_unrecovered_write_errors' => 'last_mount_unrecovered_write_errors',
        'last_mount_unrecovered_read_errors' => 'last_mount_unrecovered_read_errors',
        'last_mount_mbytes_written' => 'last_mount_mbytes_written',
        'last_mount_mbytes_read' => 'last_mount_mbytes_read',
        'lifetime_mbytes_written' => 'lifetime_mbytes_written',
        'lifetime_mbytes_read' => 'lifetime_mbytes_read',
        'last_load_write_compression_ratio' => 'last_load_write_compression_ratio',
        'last_load_read_compression_ratio' => 'last_load_read_compression_ratio',
        'medium_mount_time' => 'medium_mount_time',
        'medium_ready_time' => 'medium_ready_time',
        'total_native_capacity' => 'total_native_capacity',
        'total_used_native_capacity' => 'total_used_native_capacity',
        'write_protect' => 'write_protect',
        'worm' => 'worm',
        'beginning_of_medium_passes' => 'beginning_of_medium_passes',
        'middle_of_tape_passes' => 'middle_of_tape_passes',
        'read_compression_ratio' => 'read_compression_ratio',
        'write_compression_ratio' => 'write_compression_ratio',
        'mbytes_transferred_to_app_client' => 'mbytes_transferred_to_app_client',
        'bytes_transferred_to_app_client' => 'bytes_transferred_to_app_client',
        'mbytes_read_from_medium' => 'mbytes_read_from_medium',
        'bytes_read_from_medium' => 'bytes_read_from_medium',
        'mbytes_transferred_from_app_client' => 'mbytes_transferred_from_app_client',
        'bytes_transferred_from_app_client' => 'bytes_transferred_from_app_client',
        'mbytes_written_to_medium' => 'mbytes_written_to_medium',
        'bytes_written_to_medium' => 'bytes_written_to_medium',
        'data_compression_enabled' => 'data_compression_enabled',
        'write_retries' => 'write_retries',
        'write_perms' => 'write_perms',
        'suspended_writes' => 'suspended_writes',
        'fatal_suspended_writes' => 'fatal_suspended_writes',
        'read_retries' => 'read_retries',
        'read_perms' => 'read_perms',
        'suspended_reads' => 'suspended_reads',
        'fatal_suspended_reads' => 'fatal_suspended_reads',
        'partition_0_remaining_capacity' => 'partition_0_remaining_capacity',
        'partition_1_remaining_capacity' => 'partition_1_remaining_capacity',
        'partition_0_maximum_capacity' => 'partition_0_maximum_capacity',
        'partition_1_maximum_capacity' => 'partition_1_maximum_capacity'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'log_time' => 'setLogTime',
        'barcode' => 'setBarcode',
        'mounts' => 'setMounts',
        'datasets_written' => 'setDatasetsWritten',
        'datasets_read' => 'setDatasetsRead',
        'recovered_write_data_errors' => 'setRecoveredWriteDataErrors',
        'unrecovered_write_data_errors' => 'setUnrecoveredWriteDataErrors',
        'write_servo_errors' => 'setWriteServoErrors',
        'unrecovered_write_servo_errors' => 'setUnrecoveredWriteServoErrors',
        'recovered_read_errors' => 'setRecoveredReadErrors',
        'unrecovered_read_errors' => 'setUnrecoveredReadErrors',
        'last_mount_unrecovered_write_errors' => 'setLastMountUnrecoveredWriteErrors',
        'last_mount_unrecovered_read_errors' => 'setLastMountUnrecoveredReadErrors',
        'last_mount_mbytes_written' => 'setLastMountMbytesWritten',
        'last_mount_mbytes_read' => 'setLastMountMbytesRead',
        'lifetime_mbytes_written' => 'setLifetimeMbytesWritten',
        'lifetime_mbytes_read' => 'setLifetimeMbytesRead',
        'last_load_write_compression_ratio' => 'setLastLoadWriteCompressionRatio',
        'last_load_read_compression_ratio' => 'setLastLoadReadCompressionRatio',
        'medium_mount_time' => 'setMediumMountTime',
        'medium_ready_time' => 'setMediumReadyTime',
        'total_native_capacity' => 'setTotalNativeCapacity',
        'total_used_native_capacity' => 'setTotalUsedNativeCapacity',
        'write_protect' => 'setWriteProtect',
        'worm' => 'setWorm',
        'beginning_of_medium_passes' => 'setBeginningOfMediumPasses',
        'middle_of_tape_passes' => 'setMiddleOfTapePasses',
        'read_compression_ratio' => 'setReadCompressionRatio',
        'write_compression_ratio' => 'setWriteCompressionRatio',
        'mbytes_transferred_to_app_client' => 'setMbytesTransferredToAppClient',
        'bytes_transferred_to_app_client' => 'setBytesTransferredToAppClient',
        'mbytes_read_from_medium' => 'setMbytesReadFromMedium',
        'bytes_read_from_medium' => 'setBytesReadFromMedium',
        'mbytes_transferred_from_app_client' => 'setMbytesTransferredFromAppClient',
        'bytes_transferred_from_app_client' => 'setBytesTransferredFromAppClient',
        'mbytes_written_to_medium' => 'setMbytesWrittenToMedium',
        'bytes_written_to_medium' => 'setBytesWrittenToMedium',
        'data_compression_enabled' => 'setDataCompressionEnabled',
        'write_retries' => 'setWriteRetries',
        'write_perms' => 'setWritePerms',
        'suspended_writes' => 'setSuspendedWrites',
        'fatal_suspended_writes' => 'setFatalSuspendedWrites',
        'read_retries' => 'setReadRetries',
        'read_perms' => 'setReadPerms',
        'suspended_reads' => 'setSuspendedReads',
        'fatal_suspended_reads' => 'setFatalSuspendedReads',
        'partition_0_remaining_capacity' => 'setPartition0RemainingCapacity',
        'partition_1_remaining_capacity' => 'setPartition1RemainingCapacity',
        'partition_0_maximum_capacity' => 'setPartition0MaximumCapacity',
        'partition_1_maximum_capacity' => 'setPartition1MaximumCapacity'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'log_time' => 'getLogTime',
        'barcode' => 'getBarcode',
        'mounts' => 'getMounts',
        'datasets_written' => 'getDatasetsWritten',
        'datasets_read' => 'getDatasetsRead',
        'recovered_write_data_errors' => 'getRecoveredWriteDataErrors',
        'unrecovered_write_data_errors' => 'getUnrecoveredWriteDataErrors',
        'write_servo_errors' => 'getWriteServoErrors',
        'unrecovered_write_servo_errors' => 'getUnrecoveredWriteServoErrors',
        'recovered_read_errors' => 'getRecoveredReadErrors',
        'unrecovered_read_errors' => 'getUnrecoveredReadErrors',
        'last_mount_unrecovered_write_errors' => 'getLastMountUnrecoveredWriteErrors',
        'last_mount_unrecovered_read_errors' => 'getLastMountUnrecoveredReadErrors',
        'last_mount_mbytes_written' => 'getLastMountMbytesWritten',
        'last_mount_mbytes_read' => 'getLastMountMbytesRead',
        'lifetime_mbytes_written' => 'getLifetimeMbytesWritten',
        'lifetime_mbytes_read' => 'getLifetimeMbytesRead',
        'last_load_write_compression_ratio' => 'getLastLoadWriteCompressionRatio',
        'last_load_read_compression_ratio' => 'getLastLoadReadCompressionRatio',
        'medium_mount_time' => 'getMediumMountTime',
        'medium_ready_time' => 'getMediumReadyTime',
        'total_native_capacity' => 'getTotalNativeCapacity',
        'total_used_native_capacity' => 'getTotalUsedNativeCapacity',
        'write_protect' => 'getWriteProtect',
        'worm' => 'getWorm',
        'beginning_of_medium_passes' => 'getBeginningOfMediumPasses',
        'middle_of_tape_passes' => 'getMiddleOfTapePasses',
        'read_compression_ratio' => 'getReadCompressionRatio',
        'write_compression_ratio' => 'getWriteCompressionRatio',
        'mbytes_transferred_to_app_client' => 'getMbytesTransferredToAppClient',
        'bytes_transferred_to_app_client' => 'getBytesTransferredToAppClient',
        'mbytes_read_from_medium' => 'getMbytesReadFromMedium',
        'bytes_read_from_medium' => 'getBytesReadFromMedium',
        'mbytes_transferred_from_app_client' => 'getMbytesTransferredFromAppClient',
        'bytes_transferred_from_app_client' => 'getBytesTransferredFromAppClient',
        'mbytes_written_to_medium' => 'getMbytesWrittenToMedium',
        'bytes_written_to_medium' => 'getBytesWrittenToMedium',
        'data_compression_enabled' => 'getDataCompressionEnabled',
        'write_retries' => 'getWriteRetries',
        'write_perms' => 'getWritePerms',
        'suspended_writes' => 'getSuspendedWrites',
        'fatal_suspended_writes' => 'getFatalSuspendedWrites',
        'read_retries' => 'getReadRetries',
        'read_perms' => 'getReadPerms',
        'suspended_reads' => 'getSuspendedReads',
        'fatal_suspended_reads' => 'getFatalSuspendedReads',
        'partition_0_remaining_capacity' => 'getPartition0RemainingCapacity',
        'partition_1_remaining_capacity' => 'getPartition1RemainingCapacity',
        'partition_0_maximum_capacity' => 'getPartition0MaximumCapacity',
        'partition_1_maximum_capacity' => 'getPartition1MaximumCapacity'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['log_time'] = isset($data['log_time']) ? $data['log_time'] : null;
        $this->container['barcode'] = isset($data['barcode']) ? $data['barcode'] : null;
        $this->container['mounts'] = isset($data['mounts']) ? $data['mounts'] : null;
        $this->container['datasets_written'] = isset($data['datasets_written']) ? $data['datasets_written'] : null;
        $this->container['datasets_read'] = isset($data['datasets_read']) ? $data['datasets_read'] : null;
        $this->container['recovered_write_data_errors'] = isset($data['recovered_write_data_errors']) ? $data['recovered_write_data_errors'] : null;
        $this->container['unrecovered_write_data_errors'] = isset($data['unrecovered_write_data_errors']) ? $data['unrecovered_write_data_errors'] : null;
        $this->container['write_servo_errors'] = isset($data['write_servo_errors']) ? $data['write_servo_errors'] : null;
        $this->container['unrecovered_write_servo_errors'] = isset($data['unrecovered_write_servo_errors']) ? $data['unrecovered_write_servo_errors'] : null;
        $this->container['recovered_read_errors'] = isset($data['recovered_read_errors']) ? $data['recovered_read_errors'] : null;
        $this->container['unrecovered_read_errors'] = isset($data['unrecovered_read_errors']) ? $data['unrecovered_read_errors'] : null;
        $this->container['last_mount_unrecovered_write_errors'] = isset($data['last_mount_unrecovered_write_errors']) ? $data['last_mount_unrecovered_write_errors'] : null;
        $this->container['last_mount_unrecovered_read_errors'] = isset($data['last_mount_unrecovered_read_errors']) ? $data['last_mount_unrecovered_read_errors'] : null;
        $this->container['last_mount_mbytes_written'] = isset($data['last_mount_mbytes_written']) ? $data['last_mount_mbytes_written'] : null;
        $this->container['last_mount_mbytes_read'] = isset($data['last_mount_mbytes_read']) ? $data['last_mount_mbytes_read'] : null;
        $this->container['lifetime_mbytes_written'] = isset($data['lifetime_mbytes_written']) ? $data['lifetime_mbytes_written'] : null;
        $this->container['lifetime_mbytes_read'] = isset($data['lifetime_mbytes_read']) ? $data['lifetime_mbytes_read'] : null;
        $this->container['last_load_write_compression_ratio'] = isset($data['last_load_write_compression_ratio']) ? $data['last_load_write_compression_ratio'] : null;
        $this->container['last_load_read_compression_ratio'] = isset($data['last_load_read_compression_ratio']) ? $data['last_load_read_compression_ratio'] : null;
        $this->container['medium_mount_time'] = isset($data['medium_mount_time']) ? $data['medium_mount_time'] : null;
        $this->container['medium_ready_time'] = isset($data['medium_ready_time']) ? $data['medium_ready_time'] : null;
        $this->container['total_native_capacity'] = isset($data['total_native_capacity']) ? $data['total_native_capacity'] : null;
        $this->container['total_used_native_capacity'] = isset($data['total_used_native_capacity']) ? $data['total_used_native_capacity'] : null;
        $this->container['write_protect'] = isset($data['write_protect']) ? $data['write_protect'] : null;
        $this->container['worm'] = isset($data['worm']) ? $data['worm'] : null;
        $this->container['beginning_of_medium_passes'] = isset($data['beginning_of_medium_passes']) ? $data['beginning_of_medium_passes'] : null;
        $this->container['middle_of_tape_passes'] = isset($data['middle_of_tape_passes']) ? $data['middle_of_tape_passes'] : null;
        $this->container['read_compression_ratio'] = isset($data['read_compression_ratio']) ? $data['read_compression_ratio'] : null;
        $this->container['write_compression_ratio'] = isset($data['write_compression_ratio']) ? $data['write_compression_ratio'] : null;
        $this->container['mbytes_transferred_to_app_client'] = isset($data['mbytes_transferred_to_app_client']) ? $data['mbytes_transferred_to_app_client'] : null;
        $this->container['bytes_transferred_to_app_client'] = isset($data['bytes_transferred_to_app_client']) ? $data['bytes_transferred_to_app_client'] : null;
        $this->container['mbytes_read_from_medium'] = isset($data['mbytes_read_from_medium']) ? $data['mbytes_read_from_medium'] : null;
        $this->container['bytes_read_from_medium'] = isset($data['bytes_read_from_medium']) ? $data['bytes_read_from_medium'] : null;
        $this->container['mbytes_transferred_from_app_client'] = isset($data['mbytes_transferred_from_app_client']) ? $data['mbytes_transferred_from_app_client'] : null;
        $this->container['bytes_transferred_from_app_client'] = isset($data['bytes_transferred_from_app_client']) ? $data['bytes_transferred_from_app_client'] : null;
        $this->container['mbytes_written_to_medium'] = isset($data['mbytes_written_to_medium']) ? $data['mbytes_written_to_medium'] : null;
        $this->container['bytes_written_to_medium'] = isset($data['bytes_written_to_medium']) ? $data['bytes_written_to_medium'] : null;
        $this->container['data_compression_enabled'] = isset($data['data_compression_enabled']) ? $data['data_compression_enabled'] : null;
        $this->container['write_retries'] = isset($data['write_retries']) ? $data['write_retries'] : null;
        $this->container['write_perms'] = isset($data['write_perms']) ? $data['write_perms'] : null;
        $this->container['suspended_writes'] = isset($data['suspended_writes']) ? $data['suspended_writes'] : null;
        $this->container['fatal_suspended_writes'] = isset($data['fatal_suspended_writes']) ? $data['fatal_suspended_writes'] : null;
        $this->container['read_retries'] = isset($data['read_retries']) ? $data['read_retries'] : null;
        $this->container['read_perms'] = isset($data['read_perms']) ? $data['read_perms'] : null;
        $this->container['suspended_reads'] = isset($data['suspended_reads']) ? $data['suspended_reads'] : null;
        $this->container['fatal_suspended_reads'] = isset($data['fatal_suspended_reads']) ? $data['fatal_suspended_reads'] : null;
        $this->container['partition_0_remaining_capacity'] = isset($data['partition_0_remaining_capacity']) ? $data['partition_0_remaining_capacity'] : null;
        $this->container['partition_1_remaining_capacity'] = isset($data['partition_1_remaining_capacity']) ? $data['partition_1_remaining_capacity'] : null;
        $this->container['partition_0_maximum_capacity'] = isset($data['partition_0_maximum_capacity']) ? $data['partition_0_maximum_capacity'] : null;
        $this->container['partition_1_maximum_capacity'] = isset($data['partition_1_maximum_capacity']) ? $data['partition_1_maximum_capacity'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets log_time
     *
     * @return string|null
     */
    public function getLogTime()
    {
        return $this->container['log_time'];
    }

    /**
     * Sets log_time
     *
     * @param string|null $log_time log_time
     *
     * @return $this
     */
    public function setLogTime($log_time)
    {
        $this->container['log_time'] = $log_time;

        return $this;
    }

    /**
     * Gets barcode
     *
     * @return string|null
     */
    public function getBarcode()
    {
        return $this->container['barcode'];
    }

    /**
     * Sets barcode
     *
     * @param string|null $barcode barcode
     *
     * @return $this
     */
    public function setBarcode($barcode)
    {
        $this->container['barcode'] = $barcode;

        return $this;
    }

    /**
     * Gets mounts
     *
     * @return int|null
     */
    public function getMounts()
    {
        return $this->container['mounts'];
    }

    /**
     * Sets mounts
     *
     * @param int|null $mounts mounts
     *
     * @return $this
     */
    public function setMounts($mounts)
    {
        $this->container['mounts'] = $mounts;

        return $this;
    }

    /**
     * Gets datasets_written
     *
     * @return int|null
     */
    public function getDatasetsWritten()
    {
        return $this->container['datasets_written'];
    }

    /**
     * Sets datasets_written
     *
     * @param int|null $datasets_written datasets_written
     *
     * @return $this
     */
    public function setDatasetsWritten($datasets_written)
    {
        $this->container['datasets_written'] = $datasets_written;

        return $this;
    }

    /**
     * Gets datasets_read
     *
     * @return int|null
     */
    public function getDatasetsRead()
    {
        return $this->container['datasets_read'];
    }

    /**
     * Sets datasets_read
     *
     * @param int|null $datasets_read datasets_read
     *
     * @return $this
     */
    public function setDatasetsRead($datasets_read)
    {
        $this->container['datasets_read'] = $datasets_read;

        return $this;
    }

    /**
     * Gets recovered_write_data_errors
     *
     * @return int|null
     */
    public function getRecoveredWriteDataErrors()
    {
        return $this->container['recovered_write_data_errors'];
    }

    /**
     * Sets recovered_write_data_errors
     *
     * @param int|null $recovered_write_data_errors recovered_write_data_errors
     *
     * @return $this
     */
    public function setRecoveredWriteDataErrors($recovered_write_data_errors)
    {
        $this->container['recovered_write_data_errors'] = $recovered_write_data_errors;

        return $this;
    }

    /**
     * Gets unrecovered_write_data_errors
     *
     * @return int|null
     */
    public function getUnrecoveredWriteDataErrors()
    {
        return $this->container['unrecovered_write_data_errors'];
    }

    /**
     * Sets unrecovered_write_data_errors
     *
     * @param int|null $unrecovered_write_data_errors unrecovered_write_data_errors
     *
     * @return $this
     */
    public function setUnrecoveredWriteDataErrors($unrecovered_write_data_errors)
    {
        $this->container['unrecovered_write_data_errors'] = $unrecovered_write_data_errors;

        return $this;
    }

    /**
     * Gets write_servo_errors
     *
     * @return int|null
     */
    public function getWriteServoErrors()
    {
        return $this->container['write_servo_errors'];
    }

    /**
     * Sets write_servo_errors
     *
     * @param int|null $write_servo_errors write_servo_errors
     *
     * @return $this
     */
    public function setWriteServoErrors($write_servo_errors)
    {
        $this->container['write_servo_errors'] = $write_servo_errors;

        return $this;
    }

    /**
     * Gets unrecovered_write_servo_errors
     *
     * @return int|null
     */
    public function getUnrecoveredWriteServoErrors()
    {
        return $this->container['unrecovered_write_servo_errors'];
    }

    /**
     * Sets unrecovered_write_servo_errors
     *
     * @param int|null $unrecovered_write_servo_errors unrecovered_write_servo_errors
     *
     * @return $this
     */
    public function setUnrecoveredWriteServoErrors($unrecovered_write_servo_errors)
    {
        $this->container['unrecovered_write_servo_errors'] = $unrecovered_write_servo_errors;

        return $this;
    }

    /**
     * Gets recovered_read_errors
     *
     * @return int|null
     */
    public function getRecoveredReadErrors()
    {
        return $this->container['recovered_read_errors'];
    }

    /**
     * Sets recovered_read_errors
     *
     * @param int|null $recovered_read_errors recovered_read_errors
     *
     * @return $this
     */
    public function setRecoveredReadErrors($recovered_read_errors)
    {
        $this->container['recovered_read_errors'] = $recovered_read_errors;

        return $this;
    }

    /**
     * Gets unrecovered_read_errors
     *
     * @return int|null
     */
    public function getUnrecoveredReadErrors()
    {
        return $this->container['unrecovered_read_errors'];
    }

    /**
     * Sets unrecovered_read_errors
     *
     * @param int|null $unrecovered_read_errors unrecovered_read_errors
     *
     * @return $this
     */
    public function setUnrecoveredReadErrors($unrecovered_read_errors)
    {
        $this->container['unrecovered_read_errors'] = $unrecovered_read_errors;

        return $this;
    }

    /**
     * Gets last_mount_unrecovered_write_errors
     *
     * @return int|null
     */
    public function getLastMountUnrecoveredWriteErrors()
    {
        return $this->container['last_mount_unrecovered_write_errors'];
    }

    /**
     * Sets last_mount_unrecovered_write_errors
     *
     * @param int|null $last_mount_unrecovered_write_errors last_mount_unrecovered_write_errors
     *
     * @return $this
     */
    public function setLastMountUnrecoveredWriteErrors($last_mount_unrecovered_write_errors)
    {
        $this->container['last_mount_unrecovered_write_errors'] = $last_mount_unrecovered_write_errors;

        return $this;
    }

    /**
     * Gets last_mount_unrecovered_read_errors
     *
     * @return int|null
     */
    public function getLastMountUnrecoveredReadErrors()
    {
        return $this->container['last_mount_unrecovered_read_errors'];
    }

    /**
     * Sets last_mount_unrecovered_read_errors
     *
     * @param int|null $last_mount_unrecovered_read_errors last_mount_unrecovered_read_errors
     *
     * @return $this
     */
    public function setLastMountUnrecoveredReadErrors($last_mount_unrecovered_read_errors)
    {
        $this->container['last_mount_unrecovered_read_errors'] = $last_mount_unrecovered_read_errors;

        return $this;
    }

    /**
     * Gets last_mount_mbytes_written
     *
     * @return int|null
     */
    public function getLastMountMbytesWritten()
    {
        return $this->container['last_mount_mbytes_written'];
    }

    /**
     * Sets last_mount_mbytes_written
     *
     * @param int|null $last_mount_mbytes_written last_mount_mbytes_written
     *
     * @return $this
     */
    public function setLastMountMbytesWritten($last_mount_mbytes_written)
    {
        $this->container['last_mount_mbytes_written'] = $last_mount_mbytes_written;

        return $this;
    }

    /**
     * Gets last_mount_mbytes_read
     *
     * @return int|null
     */
    public function getLastMountMbytesRead()
    {
        return $this->container['last_mount_mbytes_read'];
    }

    /**
     * Sets last_mount_mbytes_read
     *
     * @param int|null $last_mount_mbytes_read last_mount_mbytes_read
     *
     * @return $this
     */
    public function setLastMountMbytesRead($last_mount_mbytes_read)
    {
        $this->container['last_mount_mbytes_read'] = $last_mount_mbytes_read;

        return $this;
    }

    /**
     * Gets lifetime_mbytes_written
     *
     * @return int|null
     */
    public function getLifetimeMbytesWritten()
    {
        return $this->container['lifetime_mbytes_written'];
    }

    /**
     * Sets lifetime_mbytes_written
     *
     * @param int|null $lifetime_mbytes_written lifetime_mbytes_written
     *
     * @return $this
     */
    public function setLifetimeMbytesWritten($lifetime_mbytes_written)
    {
        $this->container['lifetime_mbytes_written'] = $lifetime_mbytes_written;

        return $this;
    }

    /**
     * Gets lifetime_mbytes_read
     *
     * @return int|null
     */
    public function getLifetimeMbytesRead()
    {
        return $this->container['lifetime_mbytes_read'];
    }

    /**
     * Sets lifetime_mbytes_read
     *
     * @param int|null $lifetime_mbytes_read lifetime_mbytes_read
     *
     * @return $this
     */
    public function setLifetimeMbytesRead($lifetime_mbytes_read)
    {
        $this->container['lifetime_mbytes_read'] = $lifetime_mbytes_read;

        return $this;
    }

    /**
     * Gets last_load_write_compression_ratio
     *
     * @return int|null
     */
    public function getLastLoadWriteCompressionRatio()
    {
        return $this->container['last_load_write_compression_ratio'];
    }

    /**
     * Sets last_load_write_compression_ratio
     *
     * @param int|null $last_load_write_compression_ratio last_load_write_compression_ratio
     *
     * @return $this
     */
    public function setLastLoadWriteCompressionRatio($last_load_write_compression_ratio)
    {
        $this->container['last_load_write_compression_ratio'] = $last_load_write_compression_ratio;

        return $this;
    }

    /**
     * Gets last_load_read_compression_ratio
     *
     * @return int|null
     */
    public function getLastLoadReadCompressionRatio()
    {
        return $this->container['last_load_read_compression_ratio'];
    }

    /**
     * Sets last_load_read_compression_ratio
     *
     * @param int|null $last_load_read_compression_ratio last_load_read_compression_ratio
     *
     * @return $this
     */
    public function setLastLoadReadCompressionRatio($last_load_read_compression_ratio)
    {
        $this->container['last_load_read_compression_ratio'] = $last_load_read_compression_ratio;

        return $this;
    }

    /**
     * Gets medium_mount_time
     *
     * @return int|null
     */
    public function getMediumMountTime()
    {
        return $this->container['medium_mount_time'];
    }

    /**
     * Sets medium_mount_time
     *
     * @param int|null $medium_mount_time medium_mount_time
     *
     * @return $this
     */
    public function setMediumMountTime($medium_mount_time)
    {
        $this->container['medium_mount_time'] = $medium_mount_time;

        return $this;
    }

    /**
     * Gets medium_ready_time
     *
     * @return int|null
     */
    public function getMediumReadyTime()
    {
        return $this->container['medium_ready_time'];
    }

    /**
     * Sets medium_ready_time
     *
     * @param int|null $medium_ready_time medium_ready_time
     *
     * @return $this
     */
    public function setMediumReadyTime($medium_ready_time)
    {
        $this->container['medium_ready_time'] = $medium_ready_time;

        return $this;
    }

    /**
     * Gets total_native_capacity
     *
     * @return int|null
     */
    public function getTotalNativeCapacity()
    {
        return $this->container['total_native_capacity'];
    }

    /**
     * Sets total_native_capacity
     *
     * @param int|null $total_native_capacity total_native_capacity
     *
     * @return $this
     */
    public function setTotalNativeCapacity($total_native_capacity)
    {
        $this->container['total_native_capacity'] = $total_native_capacity;

        return $this;
    }

    /**
     * Gets total_used_native_capacity
     *
     * @return int|null
     */
    public function getTotalUsedNativeCapacity()
    {
        return $this->container['total_used_native_capacity'];
    }

    /**
     * Sets total_used_native_capacity
     *
     * @param int|null $total_used_native_capacity total_used_native_capacity
     *
     * @return $this
     */
    public function setTotalUsedNativeCapacity($total_used_native_capacity)
    {
        $this->container['total_used_native_capacity'] = $total_used_native_capacity;

        return $this;
    }

    /**
     * Gets write_protect
     *
     * @return int|null
     */
    public function getWriteProtect()
    {
        return $this->container['write_protect'];
    }

    /**
     * Sets write_protect
     *
     * @param int|null $write_protect write_protect
     *
     * @return $this
     */
    public function setWriteProtect($write_protect)
    {
        $this->container['write_protect'] = $write_protect;

        return $this;
    }

    /**
     * Gets worm
     *
     * @return int|null
     */
    public function getWorm()
    {
        return $this->container['worm'];
    }

    /**
     * Sets worm
     *
     * @param int|null $worm worm
     *
     * @return $this
     */
    public function setWorm($worm)
    {
        $this->container['worm'] = $worm;

        return $this;
    }

    /**
     * Gets beginning_of_medium_passes
     *
     * @return int|null
     */
    public function getBeginningOfMediumPasses()
    {
        return $this->container['beginning_of_medium_passes'];
    }

    /**
     * Sets beginning_of_medium_passes
     *
     * @param int|null $beginning_of_medium_passes beginning_of_medium_passes
     *
     * @return $this
     */
    public function setBeginningOfMediumPasses($beginning_of_medium_passes)
    {
        $this->container['beginning_of_medium_passes'] = $beginning_of_medium_passes;

        return $this;
    }

    /**
     * Gets middle_of_tape_passes
     *
     * @return int|null
     */
    public function getMiddleOfTapePasses()
    {
        return $this->container['middle_of_tape_passes'];
    }

    /**
     * Sets middle_of_tape_passes
     *
     * @param int|null $middle_of_tape_passes middle_of_tape_passes
     *
     * @return $this
     */
    public function setMiddleOfTapePasses($middle_of_tape_passes)
    {
        $this->container['middle_of_tape_passes'] = $middle_of_tape_passes;

        return $this;
    }

    /**
     * Gets read_compression_ratio
     *
     * @return int|null
     */
    public function getReadCompressionRatio()
    {
        return $this->container['read_compression_ratio'];
    }

    /**
     * Sets read_compression_ratio
     *
     * @param int|null $read_compression_ratio read_compression_ratio
     *
     * @return $this
     */
    public function setReadCompressionRatio($read_compression_ratio)
    {
        $this->container['read_compression_ratio'] = $read_compression_ratio;

        return $this;
    }

    /**
     * Gets write_compression_ratio
     *
     * @return int|null
     */
    public function getWriteCompressionRatio()
    {
        return $this->container['write_compression_ratio'];
    }

    /**
     * Sets write_compression_ratio
     *
     * @param int|null $write_compression_ratio write_compression_ratio
     *
     * @return $this
     */
    public function setWriteCompressionRatio($write_compression_ratio)
    {
        $this->container['write_compression_ratio'] = $write_compression_ratio;

        return $this;
    }

    /**
     * Gets mbytes_transferred_to_app_client
     *
     * @return int|null
     */
    public function getMbytesTransferredToAppClient()
    {
        return $this->container['mbytes_transferred_to_app_client'];
    }

    /**
     * Sets mbytes_transferred_to_app_client
     *
     * @param int|null $mbytes_transferred_to_app_client mbytes_transferred_to_app_client
     *
     * @return $this
     */
    public function setMbytesTransferredToAppClient($mbytes_transferred_to_app_client)
    {
        $this->container['mbytes_transferred_to_app_client'] = $mbytes_transferred_to_app_client;

        return $this;
    }

    /**
     * Gets bytes_transferred_to_app_client
     *
     * @return int|null
     */
    public function getBytesTransferredToAppClient()
    {
        return $this->container['bytes_transferred_to_app_client'];
    }

    /**
     * Sets bytes_transferred_to_app_client
     *
     * @param int|null $bytes_transferred_to_app_client bytes_transferred_to_app_client
     *
     * @return $this
     */
    public function setBytesTransferredToAppClient($bytes_transferred_to_app_client)
    {
        $this->container['bytes_transferred_to_app_client'] = $bytes_transferred_to_app_client;

        return $this;
    }

    /**
     * Gets mbytes_read_from_medium
     *
     * @return int|null
     */
    public function getMbytesReadFromMedium()
    {
        return $this->container['mbytes_read_from_medium'];
    }

    /**
     * Sets mbytes_read_from_medium
     *
     * @param int|null $mbytes_read_from_medium mbytes_read_from_medium
     *
     * @return $this
     */
    public function setMbytesReadFromMedium($mbytes_read_from_medium)
    {
        $this->container['mbytes_read_from_medium'] = $mbytes_read_from_medium;

        return $this;
    }

    /**
     * Gets bytes_read_from_medium
     *
     * @return int|null
     */
    public function getBytesReadFromMedium()
    {
        return $this->container['bytes_read_from_medium'];
    }

    /**
     * Sets bytes_read_from_medium
     *
     * @param int|null $bytes_read_from_medium bytes_read_from_medium
     *
     * @return $this
     */
    public function setBytesReadFromMedium($bytes_read_from_medium)
    {
        $this->container['bytes_read_from_medium'] = $bytes_read_from_medium;

        return $this;
    }

    /**
     * Gets mbytes_transferred_from_app_client
     *
     * @return int|null
     */
    public function getMbytesTransferredFromAppClient()
    {
        return $this->container['mbytes_transferred_from_app_client'];
    }

    /**
     * Sets mbytes_transferred_from_app_client
     *
     * @param int|null $mbytes_transferred_from_app_client mbytes_transferred_from_app_client
     *
     * @return $this
     */
    public function setMbytesTransferredFromAppClient($mbytes_transferred_from_app_client)
    {
        $this->container['mbytes_transferred_from_app_client'] = $mbytes_transferred_from_app_client;

        return $this;
    }

    /**
     * Gets bytes_transferred_from_app_client
     *
     * @return int|null
     */
    public function getBytesTransferredFromAppClient()
    {
        return $this->container['bytes_transferred_from_app_client'];
    }

    /**
     * Sets bytes_transferred_from_app_client
     *
     * @param int|null $bytes_transferred_from_app_client bytes_transferred_from_app_client
     *
     * @return $this
     */
    public function setBytesTransferredFromAppClient($bytes_transferred_from_app_client)
    {
        $this->container['bytes_transferred_from_app_client'] = $bytes_transferred_from_app_client;

        return $this;
    }

    /**
     * Gets mbytes_written_to_medium
     *
     * @return int|null
     */
    public function getMbytesWrittenToMedium()
    {
        return $this->container['mbytes_written_to_medium'];
    }

    /**
     * Sets mbytes_written_to_medium
     *
     * @param int|null $mbytes_written_to_medium mbytes_written_to_medium
     *
     * @return $this
     */
    public function setMbytesWrittenToMedium($mbytes_written_to_medium)
    {
        $this->container['mbytes_written_to_medium'] = $mbytes_written_to_medium;

        return $this;
    }

    /**
     * Gets bytes_written_to_medium
     *
     * @return int|null
     */
    public function getBytesWrittenToMedium()
    {
        return $this->container['bytes_written_to_medium'];
    }

    /**
     * Sets bytes_written_to_medium
     *
     * @param int|null $bytes_written_to_medium bytes_written_to_medium
     *
     * @return $this
     */
    public function setBytesWrittenToMedium($bytes_written_to_medium)
    {
        $this->container['bytes_written_to_medium'] = $bytes_written_to_medium;

        return $this;
    }

    /**
     * Gets data_compression_enabled
     *
     * @return int|null
     */
    public function getDataCompressionEnabled()
    {
        return $this->container['data_compression_enabled'];
    }

    /**
     * Sets data_compression_enabled
     *
     * @param int|null $data_compression_enabled data_compression_enabled
     *
     * @return $this
     */
    public function setDataCompressionEnabled($data_compression_enabled)
    {
        $this->container['data_compression_enabled'] = $data_compression_enabled;

        return $this;
    }

    /**
     * Gets write_retries
     *
     * @return int|null
     */
    public function getWriteRetries()
    {
        return $this->container['write_retries'];
    }

    /**
     * Sets write_retries
     *
     * @param int|null $write_retries write_retries
     *
     * @return $this
     */
    public function setWriteRetries($write_retries)
    {
        $this->container['write_retries'] = $write_retries;

        return $this;
    }

    /**
     * Gets write_perms
     *
     * @return int|null
     */
    public function getWritePerms()
    {
        return $this->container['write_perms'];
    }

    /**
     * Sets write_perms
     *
     * @param int|null $write_perms write_perms
     *
     * @return $this
     */
    public function setWritePerms($write_perms)
    {
        $this->container['write_perms'] = $write_perms;

        return $this;
    }

    /**
     * Gets suspended_writes
     *
     * @return int|null
     */
    public function getSuspendedWrites()
    {
        return $this->container['suspended_writes'];
    }

    /**
     * Sets suspended_writes
     *
     * @param int|null $suspended_writes suspended_writes
     *
     * @return $this
     */
    public function setSuspendedWrites($suspended_writes)
    {
        $this->container['suspended_writes'] = $suspended_writes;

        return $this;
    }

    /**
     * Gets fatal_suspended_writes
     *
     * @return int|null
     */
    public function getFatalSuspendedWrites()
    {
        return $this->container['fatal_suspended_writes'];
    }

    /**
     * Sets fatal_suspended_writes
     *
     * @param int|null $fatal_suspended_writes fatal_suspended_writes
     *
     * @return $this
     */
    public function setFatalSuspendedWrites($fatal_suspended_writes)
    {
        $this->container['fatal_suspended_writes'] = $fatal_suspended_writes;

        return $this;
    }

    /**
     * Gets read_retries
     *
     * @return int|null
     */
    public function getReadRetries()
    {
        return $this->container['read_retries'];
    }

    /**
     * Sets read_retries
     *
     * @param int|null $read_retries read_retries
     *
     * @return $this
     */
    public function setReadRetries($read_retries)
    {
        $this->container['read_retries'] = $read_retries;

        return $this;
    }

    /**
     * Gets read_perms
     *
     * @return int|null
     */
    public function getReadPerms()
    {
        return $this->container['read_perms'];
    }

    /**
     * Sets read_perms
     *
     * @param int|null $read_perms read_perms
     *
     * @return $this
     */
    public function setReadPerms($read_perms)
    {
        $this->container['read_perms'] = $read_perms;

        return $this;
    }

    /**
     * Gets suspended_reads
     *
     * @return int|null
     */
    public function getSuspendedReads()
    {
        return $this->container['suspended_reads'];
    }

    /**
     * Sets suspended_reads
     *
     * @param int|null $suspended_reads suspended_reads
     *
     * @return $this
     */
    public function setSuspendedReads($suspended_reads)
    {
        $this->container['suspended_reads'] = $suspended_reads;

        return $this;
    }

    /**
     * Gets fatal_suspended_reads
     *
     * @return int|null
     */
    public function getFatalSuspendedReads()
    {
        return $this->container['fatal_suspended_reads'];
    }

    /**
     * Sets fatal_suspended_reads
     *
     * @param int|null $fatal_suspended_reads fatal_suspended_reads
     *
     * @return $this
     */
    public function setFatalSuspendedReads($fatal_suspended_reads)
    {
        $this->container['fatal_suspended_reads'] = $fatal_suspended_reads;

        return $this;
    }

    /**
     * Gets partition_0_remaining_capacity
     *
     * @return int|null
     */
    public function getPartition0RemainingCapacity()
    {
        return $this->container['partition_0_remaining_capacity'];
    }

    /**
     * Sets partition_0_remaining_capacity
     *
     * @param int|null $partition_0_remaining_capacity partition_0_remaining_capacity
     *
     * @return $this
     */
    public function setPartition0RemainingCapacity($partition_0_remaining_capacity)
    {
        $this->container['partition_0_remaining_capacity'] = $partition_0_remaining_capacity;

        return $this;
    }

    /**
     * Gets partition_1_remaining_capacity
     *
     * @return int|null
     */
    public function getPartition1RemainingCapacity()
    {
        return $this->container['partition_1_remaining_capacity'];
    }

    /**
     * Sets partition_1_remaining_capacity
     *
     * @param int|null $partition_1_remaining_capacity partition_1_remaining_capacity
     *
     * @return $this
     */
    public function setPartition1RemainingCapacity($partition_1_remaining_capacity)
    {
        $this->container['partition_1_remaining_capacity'] = $partition_1_remaining_capacity;

        return $this;
    }

    /**
     * Gets partition_0_maximum_capacity
     *
     * @return int|null
     */
    public function getPartition0MaximumCapacity()
    {
        return $this->container['partition_0_maximum_capacity'];
    }

    /**
     * Sets partition_0_maximum_capacity
     *
     * @param int|null $partition_0_maximum_capacity partition_0_maximum_capacity
     *
     * @return $this
     */
    public function setPartition0MaximumCapacity($partition_0_maximum_capacity)
    {
        $this->container['partition_0_maximum_capacity'] = $partition_0_maximum_capacity;

        return $this;
    }

    /**
     * Gets partition_1_maximum_capacity
     *
     * @return int|null
     */
    public function getPartition1MaximumCapacity()
    {
        return $this->container['partition_1_maximum_capacity'];
    }

    /**
     * Sets partition_1_maximum_capacity
     *
     * @param int|null $partition_1_maximum_capacity partition_1_maximum_capacity
     *
     * @return $this
     */
    public function setPartition1MaximumCapacity($partition_1_maximum_capacity)
    {
        $this->container['partition_1_maximum_capacity'] = $partition_1_maximum_capacity;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


